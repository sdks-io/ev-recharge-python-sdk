# -*- coding: utf-8 -*-

"""
shellev

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellev.models.response_error_401_all_of_1_errors_items import ResponseError401AllOf1ErrorsItems


class ResponseError401AllOf1(object):

    """Implementation of the 'responseError401AllOf1' model.

    TODO: type model description here.

    Attributes:
        errors (List[ResponseError401AllOf1ErrorsItems]): Details of error(s)
            encountered

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "errors": 'Errors'
    }

    def __init__(self,
                 errors=None):
        """Constructor for the ResponseError401AllOf1 class"""

        # Initialize members of the class
        self.errors = errors 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        errors = None
        if dictionary.get('Errors') is not None:
            errors = [ResponseError401AllOf1ErrorsItems.from_dictionary(x) for x in dictionary.get('Errors')]
        # Return an object of this model
        return cls(errors)
