# -*- coding: utf-8 -*-

"""
shellev

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from shellev.api_helper import APIHelper


class Address(object):

    """Implementation of the 'Address' model.

    Address of the Shell Recharge Location

    Attributes:
        street_and_number (str): Street Name and Number of the Shell Recharge
            Location
        postal_code (str): Postal Code of the Shell Recharge Location
        city (str): City name of the Shell Recharge Location
        country (str): ISO 3166 Alpha-2 Country Code of the Shell Recharge
            Location

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "street_and_number": 'streetAndNumber',
        "postal_code": 'postalCode',
        "city": 'city',
        "country": 'country'
    }

    _optionals = [
        'street_and_number',
        'postal_code',
        'city',
        'country',
    ]

    def __init__(self,
                 street_and_number=APIHelper.SKIP,
                 postal_code=APIHelper.SKIP,
                 city=APIHelper.SKIP,
                 country=APIHelper.SKIP):
        """Constructor for the Address class"""

        # Initialize members of the class
        if street_and_number is not APIHelper.SKIP:
            self.street_and_number = street_and_number 
        if postal_code is not APIHelper.SKIP:
            self.postal_code = postal_code 
        if city is not APIHelper.SKIP:
            self.city = city 
        if country is not APIHelper.SKIP:
            self.country = country 

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if dictionary is None:
            return None

        # Extract variables from the dictionary
        street_and_number = dictionary.get("streetAndNumber") if dictionary.get("streetAndNumber") else APIHelper.SKIP
        postal_code = dictionary.get("postalCode") if dictionary.get("postalCode") else APIHelper.SKIP
        city = dictionary.get("city") if dictionary.get("city") else APIHelper.SKIP
        country = dictionary.get("country") if dictionary.get("country") else APIHelper.SKIP
        # Return an object of this model
        return cls(street_and_number,
                   postal_code,
                   city,
                   country)
