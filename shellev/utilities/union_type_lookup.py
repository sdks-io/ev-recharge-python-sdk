# -*- coding: utf-8 -*-

"""
shellev

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from apimatic_core.types.union_types.leaf_type import LeafType
from apimatic_core.types.union_types.one_of import OneOf
from shellev.models.multi_location_marker import MultiLocationMarker
from shellev.models.single_location_marker import SingleLocationMarker


class UnionTypeLookUp:

    """The `UnionTypeLookUp` class serves as a utility class for 
    storing and managing type combinator templates.It acts as a container for the templates 
    used in handling various data types within the application.

    """
    _templates = {
        'LocationMarker': OneOf(
            [
                LeafType(SingleLocationMarker,
                         Context.create(
                             discriminator_value='SingleLocation',
                             discriminator='markerType'
                         )),
                LeafType(MultiLocationMarker,
                         Context.create(
                             discriminator_value='MultiLocation',
                             discriminator='markerType'
                         ))
            ],
            Context.create(
               is_array=True,
               is_optional=True
            )
        )
    }

    @staticmethod
    def get(name):
        return UnionTypeLookUp._templates[name]

